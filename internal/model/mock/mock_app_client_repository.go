// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/irvankadhafi/go-point-of-sales/internal/model (interfaces: AppClientRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/irvankadhafi/go-point-of-sales/internal/model"
)

// MockAppClientRepository is a mock of AppClientRepository interface.
type MockAppClientRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAppClientRepositoryMockRecorder
}

// MockAppClientRepositoryMockRecorder is the mock recorder for MockAppClientRepository.
type MockAppClientRepositoryMockRecorder struct {
	mock *MockAppClientRepository
}

// NewMockAppClientRepository creates a new mock instance.
func NewMockAppClientRepository(ctrl *gomock.Controller) *MockAppClientRepository {
	mock := &MockAppClientRepository{ctrl: ctrl}
	mock.recorder = &MockAppClientRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppClientRepository) EXPECT() *MockAppClientRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAppClientRepository) Create(arg0 context.Context, arg1 *model.AppClient) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockAppClientRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAppClientRepository)(nil).Create), arg0, arg1)
}

// FindByClientID mocks base method.
func (m *MockAppClientRepository) FindByClientID(arg0 context.Context, arg1 string) (*model.AppClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByClientID", arg0, arg1)
	ret0, _ := ret[0].(*model.AppClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByClientID indicates an expected call of FindByClientID.
func (mr *MockAppClientRepositoryMockRecorder) FindByClientID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByClientID", reflect.TypeOf((*MockAppClientRepository)(nil).FindByClientID), arg0, arg1)
}

// FindByID mocks base method.
func (m *MockAppClientRepository) FindByID(arg0 context.Context, arg1 int64) (*model.AppClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", arg0, arg1)
	ret0, _ := ret[0].(*model.AppClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockAppClientRepositoryMockRecorder) FindByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockAppClientRepository)(nil).FindByID), arg0, arg1)
}
